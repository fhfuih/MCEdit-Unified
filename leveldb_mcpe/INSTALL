LEVELDB_MCPE INSTALLATION INSTRUCTIONS FOR LINUX SYSTEMS
========================================================

In order to install this library, you will run the 'setup.py' file.

An alternative beta file 'setupnx.py' is also provided. It will try to
solve the binary and library dependencies for you, provided you have
them installed on your system. These dependencies are the same as for
the 'setup.py' script.

Since the library is compiled against Boost, Mojang's leveldb-mcpe and
Python 2.7, you will need these dependencies.

Ensure you're connected to internet. Somes packages need to be
downloaded.


~~~~~~~~~~~~
DEPENDENCIES
~~~~~~~~~~~~

BINARIES
~~~~~~~~

These binaries/tools have to be installed on system in order to compile
leveldb_mcpe:

* g++
* make
* tar
* unzip


BOOST 1.58.0 STATIC BOOST_PYTHON
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The static verion of 'boost_python' is required to compile  the MCEdit
internal PE support (leveldb_mcpe).
If it is not found on your system, Boost 1.58.0 will be installed for
the current user only in '~/.local/lib/boost_1_58_0_mcpe'.
This specific installation is will avoid corupting your system in case
another Boost impletaion is installed.

This specific Boost installation directory is not removed after the
PE support compilation, so if you run again the setup.py script,
and Boost is found, it won't be reinstalled.


MOJANG'S LEVELDB-MCPE
~~~~~~~~~~~~~~~~~~~~~

Like Boost, this library will be installed if not found.
It will be installed in '~/.local/lib/leveldb-mcpe'.


PYTHON 2.7 HEADERS AND DEV PACKAGE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Unfortunately, no solution to build Boost and leveldb_mcpe against a
user specific install of Python headers and devolopment package was
found (for now).

You'll have to install them on you system with you package manager...


~~~~~~~~~~~~
INSTALLATION
~~~~~~~~~~~~

Just run 'python setupnx.py build' et voil√†!

